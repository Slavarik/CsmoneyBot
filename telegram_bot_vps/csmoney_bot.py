import json
from aiogram.utils.markdown import hbold, hlink
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text
from main import collect_data
import time

API_Token = "5814281280:AAEznuAMmf0FZe3olCqBSn8DaSXymQKqess"
bot = Bot(token=API_Token, parse_mode=types.ParseMode.HTML)
dp = Dispatcher(bot)


@dp.message_handler(commands='start')
async def start(message: types.Message):
    start_buttons = ['üî™ –ù–æ–∂–∏', 'üß§ –ü–µ—Ä—á–∞—Ç–∫–∏', 'üî´ –°–Ω–∞–π–ø–µ—Ä—Å–∫–∏–µ –≤–∏–Ω—Ç–æ–≤–∫–∏', 'üëä –ü–∏—Å—Ç–æ–ª–µ—Ç—ã', 'ü¶Ö –ü–∏—Å—Ç–æ–ª–µ—Ç—ã-–ü—É–ª–µ–º—ë—Ç—ã', 'ü§ñ –®—Ç—É—Ä–º–æ–≤—ã–µ –í–∏–Ω—Ç–æ–≤–∫–∏', 'ü©∏ –î—Ä–æ–±–æ–≤–∏–∫–∏', '‚ò† –ü—É–ª–µ–º—ë—Ç—ã']
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*start_buttons)

    await message.answer('–í—ã–±–µ–∏—Ä—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=keyboard)


@dp.message_handler(Text(equals='üî™ –ù–æ–∂–∏'))
async def get_discount_knives(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')

    collect_data(weapon_type=2)

    with open('result.json', encoding='utf-8') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("name"), item.get("3d"))}\n' \
               f'{hbold("–¶–µ–Ω–∞: ")}${item.get("computed")}üî•' \
               f'{hbold("–°–∫–∏–¥–∫–∞: ")}{item.get("discount") * 100}%\n'

        if index % 20 == 0:
            time.sleep(5)

        await message.answer(card)


@dp.message_handler(Text(equals='üî´ –°–Ω–∞–π–ø–µ—Ä—Å–∫–∏–µ –≤–∏–Ω—Ç–æ–≤–∫–∏'))
async def get_discount_rifles(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')

    collect_data(weapon_type=4)

    with open('result.json', encoding='utf-8') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("name"), item.get("3d"))}\n' \
               f'{hbold("–¶–µ–Ω–∞: ")}${item.get("computed")}üî•' \
               f'{hbold("–°–∫–∏–¥–∫–∞: ")}{item.get("discount") * 100}%\n'

        if index % 20 == 0:
            time.sleep(5)

        await message.answer(card)


@dp.message_handler(Text(equals='üß§ –ü–µ—Ä—á–∞—Ç–∫–∏'))
async def get_discount_gloves(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')

    collect_data(weapon_type=13)

    with open('result.json', encoding='utf-8') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("name"), item.get("3d"))}\n' \
               f'{hbold("–¶–µ–Ω–∞: ")}${item.get("computed")}üî•' \
               f'{hbold("–°–∫–∏–¥–∫–∞: ")}{item.get("discount") * 100}%\n'

        if index % 20 == 0:
            time.sleep(5)

        await message.answer(card)

@dp.message_handler(Text(equals='üëä –ü–∏—Å—Ç–æ–ª–µ—Ç—ã'))
async def get_discount_rifles(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')

    collect_data(weapon_type=5)

    with open('result.json', encoding='utf-8') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("name"), item.get("3d"))}\n' \
               f'{hbold("–¶–µ–Ω–∞: ")}${item.get("computed")}üî•' \
               f'{hbold("–°–∫–∏–¥–∫–∞: ")}{item.get("discount") * 100}%\n'

        if index % 20 == 0:
            time.sleep(5)

        await message.answer(card)

@dp.message_handler(Text(equals='ü¶Ö –ü–∏—Å—Ç–æ–ª–µ—Ç—ã-–ü—É–ª–µ–º—ë—Ç—ã'))
async def get_discount_rifles(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')

    collect_data(weapon_type=6)

    with open('result.json', encoding='utf-8') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("name"), item.get("3d"))}\n' \
               f'{hbold("–¶–µ–Ω–∞: ")}${item.get("computed")}üî•' \
               f'{hbold("–°–∫–∏–¥–∫–∞: ")}{item.get("discount") * 100}%\n'

        if index % 20 == 0:
            time.sleep(5)

        await message.answer(card)

@dp.message_handler(Text(equals='ü§ñ –®—Ç—É—Ä–º–æ–≤—ã–µ –í–∏–Ω—Ç–æ–≤–∫–∏'))
async def get_discount_rifles(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')

    collect_data(weapon_type=3)

    with open('result.json', encoding='utf-8') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("name"), item.get("3d"))}\n' \
               f'{hbold("–¶–µ–Ω–∞: ")}${item.get("computed")}üî•' \
               f'{hbold("–°–∫–∏–¥–∫–∞: ")}{item.get("discount") * 100}%\n'

        if index % 20 == 0:
            time.sleep(5)

        await message.answer(card)

@dp.message_handler(Text(equals='ü©∏ –î—Ä–æ–±–æ–≤–∏–∫–∏'))
async def get_discount_rifles(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')

    collect_data(weapon_type=7)

    with open('result.json', encoding='utf-8') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("name"), item.get("3d"))}\n' \
               f'{hbold("–¶–µ–Ω–∞: ")}${item.get("computed")}üî•' \
               f'{hbold("–°–∫–∏–¥–∫–∞: ")}{item.get("discount") * 100}%\n'

        if index % 20 == 0:
            time.sleep(5)

        await message.answer(card)

@dp.message_handler(Text(equals='‚ò† –ü—É–ª–µ–º—ë—Ç—ã'))
async def get_discount_rifles(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')

    collect_data(weapon_type=8)

    with open('result.json', encoding='utf-8') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("name"), item.get("3d"))}\n' \
               f'{hbold("–¶–µ–Ω–∞: ")}${item.get("computed")}üî•' \
               f'{hbold("–°–∫–∏–¥–∫–∞: ")}{item.get("discount") * 100}%\n'

        if index % 20 == 0:
            time.sleep(5)

        await message.answer(card)

def main():
    executor.start_polling(dp)


if __name__ == '__main__':
    main()
